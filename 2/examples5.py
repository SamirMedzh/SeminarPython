# Множества содержат в себе уникальные элементы, не обязательно упорядоченные.
# Одно множество может содержать значения любых типов. Если у Вас есть два множества,
# Вы можете совершать над ними любые стандартные операции, например, объединение,
# пересечение и разность.
colors = {'red', 'green', 'blue'}          # создание, с помощью фигурных скобок
print(colors)  # {'red', 'green', 'blue'}
colors.add('red')                          # Добавляем в множество значение
print(colors)  # {'red', 'green', 'blue'}  # red уже было поэтому не добавилось
colors.add('gray')
print(colors)  # {'red', 'green', 'blue','gray'}
colors.remove('red')                       # Удаляем значение
print(colors)  # {'green', 'blue','gray'}
colors.remove('red')  # KeyError: 'red'    # Здесь уже ред нет поэтому выдаст ошибку
colors.discard('red')  # ok                # Будет проверять есть ли значение. Если есть то удалит, если нет то пропустит
colors.clear()                             # Удаляем все элементы. Принт выдаст пустое set

q = set()   # создание множества

a = {1, 2, 3, 5, 8}
b = {2, 5, 8, 13, 21}
c = a.copy() # c = {1, 2, 3, 5, 8}            # Копия множества а, в перемен с
u = a.union(b) # u = {1, 2, 3, 5, 8, 13, 21   # Объединение а в b, уникальные
i = a.intersection(b) # i = {8, 2, 5}         # Пересечение
dl = a.difference(b) # dl = {1, 3}            # Разность из а убираем все значение которые есть в b
dr = b.difference(a) # dr = {13, 21}          # Разность  наоборот
q = a.union(b).difference(a.intersection(b))# {1, 21, 3, 13}

a = {1, 2, 3, 5, 8}
b = frozenset(a)     # заморожен множество не можем изменять
print(b) # frozenset({1, 2, 3, 5, 8})
